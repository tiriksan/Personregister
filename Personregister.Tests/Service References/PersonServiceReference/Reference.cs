//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Personregister.Tests.PersonServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://register.nhn.no/PR", ConfigurationName="PersonServiceReference.IPersonService")]
    public interface IPersonService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/PR/IPersonService/Search", ReplyAction="http://register.nhn.no/PR/IPersonService/SearchResponse")]
        Personregister.PersonServiceReference.SearchResult Search(Personregister.PersonServiceReference.SearchParameters parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/PR/IPersonService/Search", ReplyAction="http://register.nhn.no/PR/IPersonService/SearchResponse")]
        System.Threading.Tasks.Task<Personregister.PersonServiceReference.SearchResult> SearchAsync(Personregister.PersonServiceReference.SearchParameters parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/PR/IPersonService/GetPerson", ReplyAction="http://register.nhn.no/PR/IPersonService/GetPersonResponse")]
        Personregister.PersonServiceReference.Person GetPerson(Personregister.PersonServiceReference.LookupParameters parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/PR/IPersonService/GetPerson", ReplyAction="http://register.nhn.no/PR/IPersonService/GetPersonResponse")]
        System.Threading.Tasks.Task<Personregister.PersonServiceReference.Person> GetPersonAsync(Personregister.PersonServiceReference.LookupParameters parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/PR/IPersonService/GetPersons", ReplyAction="http://register.nhn.no/PR/IPersonService/GetPersonsResponse")]
        Personregister.PersonServiceReference.Person[] GetPersons(string[] listOfNIN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/PR/IPersonService/GetPersons", ReplyAction="http://register.nhn.no/PR/IPersonService/GetPersonsResponse")]
        System.Threading.Tasks.Task<Personregister.PersonServiceReference.Person[]> GetPersonsAsync(string[] listOfNIN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/PR/IPersonService/GetAddresses", ReplyAction="http://register.nhn.no/PR/IPersonService/GetAddressesResponse")]
        Personregister.PersonServiceReference.Address[] GetAddresses(Personregister.PersonServiceReference.LookupParameters parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/PR/IPersonService/GetAddresses", ReplyAction="http://register.nhn.no/PR/IPersonService/GetAddressesResponse")]
        System.Threading.Tasks.Task<Personregister.PersonServiceReference.Address[]> GetAddressesAsync(Personregister.PersonServiceReference.LookupParameters parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/PR/IPersonService/GetChildren", ReplyAction="http://register.nhn.no/PR/IPersonService/GetChildrenResponse")]
        Personregister.PersonServiceReference.Person[] GetChildren(string NIN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/PR/IPersonService/GetChildren", ReplyAction="http://register.nhn.no/PR/IPersonService/GetChildrenResponse")]
        System.Threading.Tasks.Task<Personregister.PersonServiceReference.Person[]> GetChildrenAsync(string NIN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/PR/IPersonService/GetIdentityChanges", ReplyAction="http://register.nhn.no/PR/IPersonService/GetIdentityChangesResponse")]
        Personregister.PersonServiceReference.IdentityChange[] GetIdentityChanges(System.DateTime from, System.Nullable<System.DateTime> to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/PR/IPersonService/GetIdentityChanges", ReplyAction="http://register.nhn.no/PR/IPersonService/GetIdentityChangesResponse")]
        System.Threading.Tasks.Task<Personregister.PersonServiceReference.IdentityChange[]> GetIdentityChangesAsync(System.DateTime from, System.Nullable<System.DateTime> to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/PR/IPersonService/GetChanges", ReplyAction="http://register.nhn.no/PR/IPersonService/GetChangesResponse")]
        Personregister.PersonServiceReference.Person[] GetChanges(System.DateTime from, System.Nullable<System.DateTime> to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://register.nhn.no/PR/IPersonService/GetChanges", ReplyAction="http://register.nhn.no/PR/IPersonService/GetChangesResponse")]
        System.Threading.Tasks.Task<Personregister.PersonServiceReference.Person[]> GetChangesAsync(System.DateTime from, System.Nullable<System.DateTime> to);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPersonServiceChannel : Personregister.Tests.PersonServiceReference.IPersonService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PersonServiceClient : System.ServiceModel.ClientBase<Personregister.Tests.PersonServiceReference.IPersonService>, Personregister.Tests.PersonServiceReference.IPersonService {
        
        public PersonServiceClient() {
        }
        
        public PersonServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PersonServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PersonServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PersonServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Personregister.PersonServiceReference.SearchResult Search(Personregister.PersonServiceReference.SearchParameters parameters) {
            return base.Channel.Search(parameters);
        }
        
        public System.Threading.Tasks.Task<Personregister.PersonServiceReference.SearchResult> SearchAsync(Personregister.PersonServiceReference.SearchParameters parameters) {
            return base.Channel.SearchAsync(parameters);
        }
        
        public Personregister.PersonServiceReference.Person GetPerson(Personregister.PersonServiceReference.LookupParameters parameters) {
            return base.Channel.GetPerson(parameters);
        }
        
        public System.Threading.Tasks.Task<Personregister.PersonServiceReference.Person> GetPersonAsync(Personregister.PersonServiceReference.LookupParameters parameters) {
            return base.Channel.GetPersonAsync(parameters);
        }
        
        public Personregister.PersonServiceReference.Person[] GetPersons(string[] listOfNIN) {
            return base.Channel.GetPersons(listOfNIN);
        }
        
        public System.Threading.Tasks.Task<Personregister.PersonServiceReference.Person[]> GetPersonsAsync(string[] listOfNIN) {
            return base.Channel.GetPersonsAsync(listOfNIN);
        }
        
        public Personregister.PersonServiceReference.Address[] GetAddresses(Personregister.PersonServiceReference.LookupParameters parameters) {
            return base.Channel.GetAddresses(parameters);
        }
        
        public System.Threading.Tasks.Task<Personregister.PersonServiceReference.Address[]> GetAddressesAsync(Personregister.PersonServiceReference.LookupParameters parameters) {
            return base.Channel.GetAddressesAsync(parameters);
        }
        
        public Personregister.PersonServiceReference.Person[] GetChildren(string NIN) {
            return base.Channel.GetChildren(NIN);
        }
        
        public System.Threading.Tasks.Task<Personregister.PersonServiceReference.Person[]> GetChildrenAsync(string NIN) {
            return base.Channel.GetChildrenAsync(NIN);
        }
        
        public Personregister.PersonServiceReference.IdentityChange[] GetIdentityChanges(System.DateTime from, System.Nullable<System.DateTime> to) {
            return base.Channel.GetIdentityChanges(from, to);
        }
        
        public System.Threading.Tasks.Task<Personregister.PersonServiceReference.IdentityChange[]> GetIdentityChangesAsync(System.DateTime from, System.Nullable<System.DateTime> to) {
            return base.Channel.GetIdentityChangesAsync(from, to);
        }
        
        public Personregister.PersonServiceReference.Person[] GetChanges(System.DateTime from, System.Nullable<System.DateTime> to) {
            return base.Channel.GetChanges(from, to);
        }
        
        public System.Threading.Tasks.Task<Personregister.PersonServiceReference.Person[]> GetChangesAsync(System.DateTime from, System.Nullable<System.DateTime> to) {
            return base.Channel.GetChangesAsync(from, to);
        }
    }
}
